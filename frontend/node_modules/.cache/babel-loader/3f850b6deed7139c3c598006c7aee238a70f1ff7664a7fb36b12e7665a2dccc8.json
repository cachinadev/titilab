{"ast":null,"code":"// src/utils/api.js\n\n// Base de API:\n// - En dev usa \"/api\" y CRA proxy lo manda a :4000.\n// - En prod también \"/api\" y Nginx lo reenvía al backend.\n// - Puedes forzar con REACT_APP_API_BASE o REACT_APP_BACKEND_URL.\nconst RAW_API_BASE = (process.env.REACT_APP_API_BASE || process.env.REACT_APP_BACKEND_URL || \"/api\").trim();\n\n// Normaliza sin barra final\nexport const API_BASE = RAW_API_BASE.endsWith(\"/\") ? RAW_API_BASE.slice(0, -1) : RAW_API_BASE;\n\n// Construye URL (acepta rutas absolutas http/https)\nexport const apiUrl = (path = \"\") => {\n  if (/^https?:\\/\\//i.test(path)) return path;\n  const p = String(path).startsWith(\"/\") ? path : `/${path}`;\n  return `${API_BASE}${p}`;\n};\nconst isFormData = body => typeof FormData !== \"undefined\" && body instanceof FormData;\nconst getToken = () => typeof localStorage !== \"undefined\" && localStorage.getItem(\"token\") || null;\nconst handleAutoLogout = (res, autoLogout = true) => {\n  if (!autoLogout) return;\n  if (res.status === 401 || res.status === 403) {\n    try {\n      if (typeof localStorage !== \"undefined\") localStorage.removeItem(\"token\");\n      if (typeof window !== \"undefined\") window.location.href = \"/admin-login\";\n    } catch {}\n  }\n};\n\n// Wrapper básico de fetch con:\n// - Header Accept y Content-Type automático (excepto FormData)\n// - Bearer token automático (puedes desactivar con { withAuth: false })\n// - Timeout (por defecto 20s, cambia con { timeoutMs })\n// - Auto-logout en 401/403 (desactiva con { autoLogout: false })\nexport async function apiFetch(path, options = {}) {\n  var _options$timeoutMs;\n  const url = apiUrl(path);\n  const headers = new Headers(options.headers || {});\n  const withAuth = options.withAuth !== false;\n  const autoLogout = options.autoLogout !== false; // por defecto true\n\n  // Accept por defecto\n  if (!headers.has(\"Accept\")) headers.set(\"Accept\", \"application/json\");\n\n  // Content-Type automático salvo FormData o si ya está definido\n  if (!isFormData(options.body) && !headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json\");\n  }\n\n  // Token automático si existe y no está seteado\n  if (withAuth && !headers.has(\"Authorization\")) {\n    const token = getToken();\n    if (token) headers.set(\"Authorization\", `Bearer ${token}`);\n  }\n  const controller = new AbortController();\n  const timeoutMs = Number((_options$timeoutMs = options.timeoutMs) !== null && _options$timeoutMs !== void 0 ? _options$timeoutMs : 20000);\n  const timeoutId = setTimeout(() => controller.abort(\"timeout\"), timeoutMs);\n  try {\n    const res = await fetch(url, {\n      ...options,\n      headers,\n      signal: controller.signal\n    });\n\n    // Manejo centralizado 401/403\n    handleAutoLogout(res, autoLogout);\n    return res;\n  } finally {\n    clearTimeout(timeoutId);\n  }\n}\n\n// Parseo seguro de JSON (si no es JSON retorna texto)\nasync function parseJsonSafe(res) {\n  const text = await res.text();\n  try {\n    return JSON.parse(text);\n  } catch {\n    return text;\n  }\n}\n\n// Helpers que DEVUELVEN el cuerpo ya parseado (o lanzan error con mensaje)\nexport async function apiGet(path, opts) {\n  const res = await apiFetch(path, {\n    ...opts,\n    method: \"GET\"\n  });\n  const data = await parseJsonSafe(res);\n  if (!res.ok) throw new Error(typeof data === \"string\" ? `HTTP ${res.status}: ${data}` : (data === null || data === void 0 ? void 0 : data.message) || `HTTP ${res.status}`);\n  return data;\n}\nexport async function apiPost(path, body, opts = {}) {\n  const isFD = isFormData(body);\n  const res = await apiFetch(path, {\n    ...opts,\n    method: \"POST\",\n    body: isFD ? body : JSON.stringify(body !== null && body !== void 0 ? body : {})\n    // si es FormData, no forzar Content-Type (lo hace el browser)\n  });\n  const data = await parseJsonSafe(res);\n  if (!res.ok) throw new Error(typeof data === \"string\" ? `HTTP ${res.status}: ${data}` : (data === null || data === void 0 ? void 0 : data.message) || `HTTP ${res.status}`);\n  return data;\n}\nexport async function apiPut(path, body, opts = {}) {\n  const isFD = isFormData(body);\n  const res = await apiFetch(path, {\n    ...opts,\n    method: \"PUT\",\n    body: isFD ? body : JSON.stringify(body !== null && body !== void 0 ? body : {})\n  });\n  const data = await parseJsonSafe(res);\n  if (!res.ok) throw new Error(typeof data === \"string\" ? `HTTP ${res.status}: ${data}` : (data === null || data === void 0 ? void 0 : data.message) || `HTTP ${res.status}`);\n  return data;\n}\nexport async function apiDelete(path, opts) {\n  const res = await apiFetch(path, {\n    ...opts,\n    method: \"DELETE\"\n  });\n  const data = await parseJsonSafe(res);\n  if (!res.ok) throw new Error(typeof data === \"string\" ? `HTTP ${res.status}: ${data}` : (data === null || data === void 0 ? void 0 : data.message) || `HTTP ${res.status}`);\n  return data;\n}","map":{"version":3,"names":["RAW_API_BASE","process","env","REACT_APP_API_BASE","REACT_APP_BACKEND_URL","trim","API_BASE","endsWith","slice","apiUrl","path","test","p","String","startsWith","isFormData","body","FormData","getToken","localStorage","getItem","handleAutoLogout","res","autoLogout","status","removeItem","window","location","href","apiFetch","options","_options$timeoutMs","url","headers","Headers","withAuth","has","set","token","controller","AbortController","timeoutMs","Number","timeoutId","setTimeout","abort","fetch","signal","clearTimeout","parseJsonSafe","text","JSON","parse","apiGet","opts","method","data","ok","Error","message","apiPost","isFD","stringify","apiPut","apiDelete"],"sources":["/Users/reyvipo/Documents/GitHub/titilab/frontend/src/utils/api.js"],"sourcesContent":["// src/utils/api.js\n\n// Base de API:\n// - En dev usa \"/api\" y CRA proxy lo manda a :4000.\n// - En prod también \"/api\" y Nginx lo reenvía al backend.\n// - Puedes forzar con REACT_APP_API_BASE o REACT_APP_BACKEND_URL.\nconst RAW_API_BASE =\n  (process.env.REACT_APP_API_BASE || process.env.REACT_APP_BACKEND_URL || \"/api\").trim();\n\n// Normaliza sin barra final\nexport const API_BASE = RAW_API_BASE.endsWith(\"/\")\n  ? RAW_API_BASE.slice(0, -1)\n  : RAW_API_BASE;\n\n// Construye URL (acepta rutas absolutas http/https)\nexport const apiUrl = (path = \"\") => {\n  if (/^https?:\\/\\//i.test(path)) return path;\n  const p = String(path).startsWith(\"/\") ? path : `/${path}`;\n  return `${API_BASE}${p}`;\n};\n\nconst isFormData = (body) =>\n  typeof FormData !== \"undefined\" && body instanceof FormData;\n\nconst getToken = () =>\n  (typeof localStorage !== \"undefined\" && localStorage.getItem(\"token\")) || null;\n\nconst handleAutoLogout = (res, autoLogout = true) => {\n  if (!autoLogout) return;\n  if (res.status === 401 || res.status === 403) {\n    try {\n      if (typeof localStorage !== \"undefined\") localStorage.removeItem(\"token\");\n      if (typeof window !== \"undefined\") window.location.href = \"/admin-login\";\n    } catch {}\n  }\n};\n\n// Wrapper básico de fetch con:\n// - Header Accept y Content-Type automático (excepto FormData)\n// - Bearer token automático (puedes desactivar con { withAuth: false })\n// - Timeout (por defecto 20s, cambia con { timeoutMs })\n// - Auto-logout en 401/403 (desactiva con { autoLogout: false })\nexport async function apiFetch(path, options = {}) {\n  const url = apiUrl(path);\n  const headers = new Headers(options.headers || {});\n  const withAuth = options.withAuth !== false;\n  const autoLogout = options.autoLogout !== false; // por defecto true\n\n  // Accept por defecto\n  if (!headers.has(\"Accept\")) headers.set(\"Accept\", \"application/json\");\n\n  // Content-Type automático salvo FormData o si ya está definido\n  if (!isFormData(options.body) && !headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json\");\n  }\n\n  // Token automático si existe y no está seteado\n  if (withAuth && !headers.has(\"Authorization\")) {\n    const token = getToken();\n    if (token) headers.set(\"Authorization\", `Bearer ${token}`);\n  }\n\n  const controller = new AbortController();\n  const timeoutMs = Number(options.timeoutMs ?? 20000);\n  const timeoutId = setTimeout(() => controller.abort(\"timeout\"), timeoutMs);\n\n  try {\n    const res = await fetch(url, {\n      ...options,\n      headers,\n      signal: controller.signal,\n    });\n\n    // Manejo centralizado 401/403\n    handleAutoLogout(res, autoLogout);\n\n    return res;\n  } finally {\n    clearTimeout(timeoutId);\n  }\n}\n\n// Parseo seguro de JSON (si no es JSON retorna texto)\nasync function parseJsonSafe(res) {\n  const text = await res.text();\n  try {\n    return JSON.parse(text);\n  } catch {\n    return text;\n  }\n}\n\n// Helpers que DEVUELVEN el cuerpo ya parseado (o lanzan error con mensaje)\nexport async function apiGet(path, opts) {\n  const res = await apiFetch(path, { ...opts, method: \"GET\" });\n  const data = await parseJsonSafe(res);\n  if (!res.ok)\n    throw new Error(typeof data === \"string\" ? `HTTP ${res.status}: ${data}` : data?.message || `HTTP ${res.status}`);\n  return data;\n}\n\nexport async function apiPost(path, body, opts = {}) {\n  const isFD = isFormData(body);\n  const res = await apiFetch(path, {\n    ...opts,\n    method: \"POST\",\n    body: isFD ? body : JSON.stringify(body ?? {}),\n    // si es FormData, no forzar Content-Type (lo hace el browser)\n  });\n  const data = await parseJsonSafe(res);\n  if (!res.ok)\n    throw new Error(typeof data === \"string\" ? `HTTP ${res.status}: ${data}` : data?.message || `HTTP ${res.status}`);\n  return data;\n}\n\nexport async function apiPut(path, body, opts = {}) {\n  const isFD = isFormData(body);\n  const res = await apiFetch(path, {\n    ...opts,\n    method: \"PUT\",\n    body: isFD ? body : JSON.stringify(body ?? {}),\n  });\n  const data = await parseJsonSafe(res);\n  if (!res.ok)\n    throw new Error(typeof data === \"string\" ? `HTTP ${res.status}: ${data}` : data?.message || `HTTP ${res.status}`);\n  return data;\n}\n\nexport async function apiDelete(path, opts) {\n  const res = await apiFetch(path, { ...opts, method: \"DELETE\" });\n  const data = await parseJsonSafe(res);\n  if (!res.ok)\n    throw new Error(typeof data === \"string\" ? `HTTP ${res.status}: ${data}` : data?.message || `HTTP ${res.status}`);\n  return data;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}