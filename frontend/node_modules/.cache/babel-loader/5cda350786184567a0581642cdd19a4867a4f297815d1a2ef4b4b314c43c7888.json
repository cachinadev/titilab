{"ast":null,"code":"var _jsxFileName = \"/Users/reyvipo/Documents/GitHub/titilab/frontend/src/context/CartContext.js\",\n  _s = $RefreshSig$();\n// src/context/CartContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState(() => {\n    const storedCart = localStorage.getItem(\"cart\");\n    return storedCart ? JSON.parse(storedCart) : [];\n  });\n\n  // ðŸ“Œ Guardar carrito en localStorage cada vez que cambie\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  // ðŸ“Œ AÃ±adir producto â€” si existe, sumar cantidad\n  const addToCart = product => {\n    setCart(prevCart => {\n      const existingItem = prevCart.find(item => item._id === product._id);\n      if (existingItem) {\n        return prevCart.map(item => item._id === product._id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      }\n      return [...prevCart, {\n        ...product,\n        quantity: 1,\n        cartId: Date.now() + Math.random()\n      }];\n    });\n  };\n\n  // ðŸ“Œ Eliminar producto usando cartId\n  const removeFromCart = cartId => {\n    setCart(prevCart => prevCart.filter(item => item.cartId !== cartId));\n  };\n\n  // ðŸ“Œ Actualizar cantidad usando cartId\n  const updateQuantity = (cartId, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(cartId);\n    } else {\n      setCart(prevCart => prevCart.map(item => item.cartId === cartId ? {\n        ...item,\n        quantity: newQuantity\n      } : item));\n    }\n  };\n\n  // ðŸ“Œ Vaciar carrito\n  const clearCart = () => {\n    setCart([]);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      setCart,\n      // âœ… accesible para sincronizar desde cualquier componente\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"O2BOFk4LVYFYiNotnJwNFPwi++Y=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","storedCart","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","product","prevCart","existingItem","find","item","_id","map","quantity","cartId","Date","now","Math","random","removeFromCart","filter","updateQuantity","newQuantity","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/reyvipo/Documents/GitHub/titilab/frontend/src/context/CartContext.js"],"sourcesContent":["// src/context/CartContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState(() => {\n    const storedCart = localStorage.getItem(\"cart\");\n    return storedCart ? JSON.parse(storedCart) : [];\n  });\n\n  // ðŸ“Œ Guardar carrito en localStorage cada vez que cambie\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  // ðŸ“Œ AÃ±adir producto â€” si existe, sumar cantidad\n  const addToCart = (product) => {\n    setCart((prevCart) => {\n      const existingItem = prevCart.find((item) => item._id === product._id);\n\n      if (existingItem) {\n        return prevCart.map((item) =>\n          item._id === product._id\n            ? { ...item, quantity: item.quantity + 1 }\n            : item\n        );\n      }\n\n      return [\n        ...prevCart,\n        { ...product, quantity: 1, cartId: Date.now() + Math.random() }\n      ];\n    });\n  };\n\n  // ðŸ“Œ Eliminar producto usando cartId\n  const removeFromCart = (cartId) => {\n    setCart((prevCart) => prevCart.filter((item) => item.cartId !== cartId));\n  };\n\n  // ðŸ“Œ Actualizar cantidad usando cartId\n  const updateQuantity = (cartId, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(cartId);\n    } else {\n      setCart((prevCart) =>\n        prevCart.map((item) =>\n          item.cartId === cartId\n            ? { ...item, quantity: newQuantity }\n            : item\n        )\n      );\n    }\n  };\n\n  // ðŸ“Œ Vaciar carrito\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        cart,\n        setCart, // âœ… accesible para sincronizar desde cualquier componente\n        addToCart,\n        removeFromCart,\n        updateQuantity,\n        clearCart\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACrC,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,EAAE;EACjD,CAAC,CAAC;;EAEF;EACAT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACR,IAAI,CAAC,CAAC;EACpD,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMS,SAAS,GAAIC,OAAO,IAAK;IAC7BT,OAAO,CAAEU,QAAQ,IAAK;MACpB,MAAMC,YAAY,GAAGD,QAAQ,CAACE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKL,OAAO,CAACK,GAAG,CAAC;MAEtE,IAAIH,YAAY,EAAE;QAChB,OAAOD,QAAQ,CAACK,GAAG,CAAEF,IAAI,IACvBA,IAAI,CAACC,GAAG,KAAKL,OAAO,CAACK,GAAG,GACpB;UAAE,GAAGD,IAAI;UAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;QAAE,CAAC,GACxCH,IACN,CAAC;MACH;MAEA,OAAO,CACL,GAAGH,QAAQ,EACX;QAAE,GAAGD,OAAO;QAAEO,QAAQ,EAAE,CAAC;QAAEC,MAAM,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC;MAAE,CAAC,CAChE;IACH,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIL,MAAM,IAAK;IACjCjB,OAAO,CAAEU,QAAQ,IAAKA,QAAQ,CAACa,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACI,MAAM,KAAKA,MAAM,CAAC,CAAC;EAC1E,CAAC;;EAED;EACA,MAAMO,cAAc,GAAGA,CAACP,MAAM,EAAEQ,WAAW,KAAK;IAC9C,IAAIA,WAAW,IAAI,CAAC,EAAE;MACpBH,cAAc,CAACL,MAAM,CAAC;IACxB,CAAC,MAAM;MACLjB,OAAO,CAAEU,QAAQ,IACfA,QAAQ,CAACK,GAAG,CAAEF,IAAI,IAChBA,IAAI,CAACI,MAAM,KAAKA,MAAM,GAClB;QAAE,GAAGJ,IAAI;QAAEG,QAAQ,EAAES;MAAY,CAAC,GAClCZ,IACN,CACF,CAAC;IACH;EACF,CAAC;;EAED;EACA,MAAMa,SAAS,GAAGA,CAAA,KAAM;IACtB1B,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACgC,QAAQ;IACnBC,KAAK,EAAE;MACL7B,IAAI;MACJC,OAAO;MAAE;MACTQ,SAAS;MACTc,cAAc;MACdE,cAAc;MACdE;IACF,CAAE;IAAA7B,QAAA,EAEDA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClC,EAAA,CAtEWF,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}