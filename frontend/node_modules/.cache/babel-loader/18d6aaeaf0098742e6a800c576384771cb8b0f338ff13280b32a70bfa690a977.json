{"ast":null,"code":"// src/utils/imageUtils.js\n\n/**\n * Utilidades para construir URLs de im치genes de forma robusta en dev/prod.\n * - Mantiene http(s):// y data: tal cual\n * - Normaliza rutas relativas (backslashes, ./)\n * - Si falta el prefijo, asume /uploads/<archivo>\n * - En dev, usa http://localhost:4000 para /uploads\n * - En prod, intenta mismo origen (o REACT_APP_BACKEND_ORIGIN/REACT_APP_UPLOADS_BASE)\n */\n\nconst STRIP_TRAILING_SLASH = (s = \"\") => s.replace(/\\/+$/, \"\");\n_c = STRIP_TRAILING_SLASH;\nconst isAbsoluteUrl = u => /^https?:\\/\\//i.test(u || \"\");\nconst isDataUrl = u => typeof u === \"string\" && u.startsWith(\"data:\");\nconst getEnv = k => {\n  try {\n    var _process$env$k, _process$env;\n    return ((_process$env$k = (_process$env = process.env) === null || _process$env === void 0 ? void 0 : _process$env[k]) !== null && _process$env$k !== void 0 ? _process$env$k : \"\").trim();\n  } catch {\n    return \"\";\n  }\n};\nconst guessIsLocalhost = () => {\n  if (typeof window === \"undefined\") return false;\n  const h = window.location.hostname || \"\";\n  return h === \"localhost\" || h === \"127.0.0.1\" || h === \"::1\";\n};\n\n/**\n * Obtiene un ORIGEN (scheme+host+port) v치lido para alcanzar el backend.\n * Prioridad:\n * 1) REACT_APP_BACKEND_ORIGIN\n * 2) REACT_APP_UPLOADS_BASE\n * 3) ORIGIN de REACT_APP_API_BASE/REACT_APP_BACKEND_URL si son absolutas\n * 4) Si estamos en localhost -> http://localhost:4000\n * 5) window.location.origin (Nginx sirviendo /uploads)\n */\nexport const getBackendOrigin = () => {\n  const forced = getEnv(\"REACT_APP_BACKEND_ORIGIN\") || getEnv(\"REACT_APP_UPLOADS_BASE\");\n  if (forced) return STRIP_TRAILING_SLASH(forced);\n  const apiBase = getEnv(\"REACT_APP_API_BASE\") || getEnv(\"REACT_APP_BACKEND_URL\") || \"/api\";\n  if (isAbsoluteUrl(apiBase)) {\n    try {\n      return new URL(apiBase).origin;\n    } catch {}\n  }\n  if (guessIsLocalhost()) return \"http://localhost:4000\";\n  if (typeof window !== \"undefined\") return window.location.origin;\n  return \"\";\n};\n\n/**\n * Devuelve la URL correcta de imagen.\n * @param {string} imagePath - Ruta/archivo de imagen desde la BD.\n * @returns {string} - URL completa o placeholder.\n */\nexport const getImageUrl = imagePath => {\n  if (!imagePath) return \"/placeholder.png\"; // fallback\n\n  // Absolutas o data:\n  if (isAbsoluteUrl(imagePath) || isDataUrl(imagePath)) return imagePath;\n\n  // Normaliza separadores y quita prefijos './' o '/'\n  let p = String(imagePath).trim().replace(/\\\\/g, \"/\").replace(/^\\.?\\//, \"\");\n\n  // Si no viene con /uploads al inicio, asumimos que vive en /uploads\n  if (!p.startsWith(\"uploads/\")) {\n    p = `uploads/${p}`;\n  }\n\n  // Asegura slash inicial y escapa caracteres (espacios, etc.)\n  p = `/${p}`;\n  const safePath = encodeURI(p);\n\n  // Resuelve origen adecuado\n  const origin = getBackendOrigin();\n  return origin ? `${STRIP_TRAILING_SLASH(origin)}${safePath}` : safePath;\n};\nexport default getImageUrl;\nvar _c;\n$RefreshReg$(_c, \"STRIP_TRAILING_SLASH\");","map":{"version":3,"names":["STRIP_TRAILING_SLASH","s","replace","_c","isAbsoluteUrl","u","test","isDataUrl","startsWith","getEnv","k","_process$env$k","_process$env","process","env","trim","guessIsLocalhost","window","h","location","hostname","getBackendOrigin","forced","apiBase","URL","origin","getImageUrl","imagePath","p","String","safePath","encodeURI","$RefreshReg$"],"sources":["/Users/reyvipo/Documents/GitHub/titilab/frontend/src/utils/imageUtils.js"],"sourcesContent":["// src/utils/imageUtils.js\n\n/**\n * Utilidades para construir URLs de im치genes de forma robusta en dev/prod.\n * - Mantiene http(s):// y data: tal cual\n * - Normaliza rutas relativas (backslashes, ./)\n * - Si falta el prefijo, asume /uploads/<archivo>\n * - En dev, usa http://localhost:4000 para /uploads\n * - En prod, intenta mismo origen (o REACT_APP_BACKEND_ORIGIN/REACT_APP_UPLOADS_BASE)\n */\n\nconst STRIP_TRAILING_SLASH = (s = \"\") => s.replace(/\\/+$/, \"\");\nconst isAbsoluteUrl = (u) => /^https?:\\/\\//i.test(u || \"\");\nconst isDataUrl = (u) => typeof u === \"string\" && u.startsWith(\"data:\");\n\nconst getEnv = (k) => {\n  try { return (process.env?.[k] ?? \"\").trim(); } catch { return \"\"; }\n};\n\nconst guessIsLocalhost = () => {\n  if (typeof window === \"undefined\") return false;\n  const h = window.location.hostname || \"\";\n  return h === \"localhost\" || h === \"127.0.0.1\" || h === \"::1\";\n};\n\n/**\n * Obtiene un ORIGEN (scheme+host+port) v치lido para alcanzar el backend.\n * Prioridad:\n * 1) REACT_APP_BACKEND_ORIGIN\n * 2) REACT_APP_UPLOADS_BASE\n * 3) ORIGIN de REACT_APP_API_BASE/REACT_APP_BACKEND_URL si son absolutas\n * 4) Si estamos en localhost -> http://localhost:4000\n * 5) window.location.origin (Nginx sirviendo /uploads)\n */\nexport const getBackendOrigin = () => {\n  const forced = getEnv(\"REACT_APP_BACKEND_ORIGIN\") || getEnv(\"REACT_APP_UPLOADS_BASE\");\n  if (forced) return STRIP_TRAILING_SLASH(forced);\n\n  const apiBase = getEnv(\"REACT_APP_API_BASE\") || getEnv(\"REACT_APP_BACKEND_URL\") || \"/api\";\n  if (isAbsoluteUrl(apiBase)) {\n    try { return new URL(apiBase).origin; } catch {}\n  }\n\n  if (guessIsLocalhost()) return \"http://localhost:4000\";\n  if (typeof window !== \"undefined\") return window.location.origin;\n  return \"\";\n};\n\n/**\n * Devuelve la URL correcta de imagen.\n * @param {string} imagePath - Ruta/archivo de imagen desde la BD.\n * @returns {string} - URL completa o placeholder.\n */\nexport const getImageUrl = (imagePath) => {\n  if (!imagePath) return \"/placeholder.png\"; // fallback\n\n  // Absolutas o data:\n  if (isAbsoluteUrl(imagePath) || isDataUrl(imagePath)) return imagePath;\n\n  // Normaliza separadores y quita prefijos './' o '/'\n  let p = String(imagePath).trim().replace(/\\\\/g, \"/\").replace(/^\\.?\\//, \"\");\n\n  // Si no viene con /uploads al inicio, asumimos que vive en /uploads\n  if (!p.startsWith(\"uploads/\")) {\n    p = `uploads/${p}`;\n  }\n\n  // Asegura slash inicial y escapa caracteres (espacios, etc.)\n  p = `/${p}`;\n  const safePath = encodeURI(p);\n\n  // Resuelve origen adecuado\n  const origin = getBackendOrigin();\n  return origin ? `${STRIP_TRAILING_SLASH(origin)}${safePath}` : safePath;\n};\n\nexport default getImageUrl;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}