{"ast":null,"code":"var _jsxFileName = \"/Users/reyvipo/Documents/GitHub/titilabs_v2/frontend/src/context/CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState(() => {\n    const storedCart = localStorage.getItem(\"cart\");\n    return storedCart ? JSON.parse(storedCart) : [];\n  });\n\n  // Guardar en localStorage\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  // ✅ Añadir producto como entrada única con cartId\n  const addToCart = product => {\n    setCart(prevCart => [...prevCart, {\n      ...product,\n      quantity: 1,\n      cartId: Date.now() + Math.random()\n    }]);\n  };\n\n  // ✅ Eliminar usando cartId\n  const removeFromCart = cartId => {\n    setCart(prevCart => prevCart.filter(item => item.cartId !== cartId));\n  };\n\n  // ✅ Actualizar cantidad usando cartId\n  const updateQuantity = (cartId, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(cartId);\n    } else {\n      setCart(prevCart => prevCart.map(item => item.cartId === cartId ? {\n        ...item,\n        quantity: newQuantity\n      } : item));\n    }\n  };\n\n  // Vaciar carrito\n  const clearCart = () => {\n    setCart([]);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"O2BOFk4LVYFYiNotnJwNFPwi++Y=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","storedCart","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","product","prevCart","quantity","cartId","Date","now","Math","random","removeFromCart","filter","item","updateQuantity","newQuantity","map","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/reyvipo/Documents/GitHub/titilabs_v2/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState(() => {\n    const storedCart = localStorage.getItem(\"cart\");\n    return storedCart ? JSON.parse(storedCart) : [];\n  });\n\n  // Guardar en localStorage\n  useEffect(() => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n  }, [cart]);\n\n  // ✅ Añadir producto como entrada única con cartId\n  const addToCart = (product) => {\n    setCart((prevCart) => [\n      ...prevCart,\n      { ...product, quantity: 1, cartId: Date.now() + Math.random() }\n    ]);\n  };\n\n  // ✅ Eliminar usando cartId\n  const removeFromCart = (cartId) => {\n    setCart((prevCart) => prevCart.filter((item) => item.cartId !== cartId));\n  };\n\n  // ✅ Actualizar cantidad usando cartId\n  const updateQuantity = (cartId, newQuantity) => {\n    if (newQuantity <= 0) {\n      removeFromCart(cartId);\n    } else {\n      setCart((prevCart) =>\n        prevCart.map((item) =>\n          item.cartId === cartId ? { ...item, quantity: newQuantity } : item\n        )\n      );\n    }\n  };\n\n  // Vaciar carrito\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  return (\n    <CartContext.Provider\n      value={{ cart, addToCart, removeFromCart, updateQuantity, clearCart }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACrC,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,EAAE;EACjD,CAAC,CAAC;;EAEF;EACAT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACR,IAAI,CAAC,CAAC;EACpD,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMS,SAAS,GAAIC,OAAO,IAAK;IAC7BT,OAAO,CAAEU,QAAQ,IAAK,CACpB,GAAGA,QAAQ,EACX;MAAE,GAAGD,OAAO;MAAEE,QAAQ,EAAE,CAAC;MAAEC,MAAM,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC;IAAE,CAAC,CAChE,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIL,MAAM,IAAK;IACjCZ,OAAO,CAAEU,QAAQ,IAAKA,QAAQ,CAACQ,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACP,MAAM,KAAKA,MAAM,CAAC,CAAC;EAC1E,CAAC;;EAED;EACA,MAAMQ,cAAc,GAAGA,CAACR,MAAM,EAAES,WAAW,KAAK;IAC9C,IAAIA,WAAW,IAAI,CAAC,EAAE;MACpBJ,cAAc,CAACL,MAAM,CAAC;IACxB,CAAC,MAAM;MACLZ,OAAO,CAAEU,QAAQ,IACfA,QAAQ,CAACY,GAAG,CAAEH,IAAI,IAChBA,IAAI,CAACP,MAAM,KAAKA,MAAM,GAAG;QAAE,GAAGO,IAAI;QAAER,QAAQ,EAAEU;MAAY,CAAC,GAAGF,IAChE,CACF,CAAC;IACH;EACF,CAAC;;EAED;EACA,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACtBvB,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IACnBC,KAAK,EAAE;MAAE1B,IAAI;MAAES,SAAS;MAAES,cAAc;MAAEG,cAAc;MAAEG;IAAU,CAAE;IAAA1B,QAAA,EAErEA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/B,EAAA,CAjDWF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}